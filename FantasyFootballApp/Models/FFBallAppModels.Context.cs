//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FantasyFootballApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FFBallDatabaseEntities : DbContext
    {
        public FFBallDatabaseEntities()
            : base("name=FFBallDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Expert> Experts { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<Ranking> Rankings { get; set; }
        public virtual DbSet<SkillPlayerStat> SkillPlayerStats { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<ExpertPlayer> ExpertPlayers { get; set; }
    
        public virtual int uspUpdateAverageRankings(Nullable<int> seasonID)
        {
            var seasonIDParameter = seasonID.HasValue ?
                new ObjectParameter("SeasonID", seasonID) :
                new ObjectParameter("SeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateAverageRankings", seasonIDParameter);
        }
    
        public virtual int uspUpdateRankInPosition(Nullable<int> expertIDRanksToUpdate, Nullable<int> seasonToUpdate)
        {
            var expertIDRanksToUpdateParameter = expertIDRanksToUpdate.HasValue ?
                new ObjectParameter("ExpertIDRanksToUpdate", expertIDRanksToUpdate) :
                new ObjectParameter("ExpertIDRanksToUpdate", typeof(int));
    
            var seasonToUpdateParameter = seasonToUpdate.HasValue ?
                new ObjectParameter("SeasonToUpdate", seasonToUpdate) :
                new ObjectParameter("SeasonToUpdate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateRankInPosition", expertIDRanksToUpdateParameter, seasonToUpdateParameter);
        }
    
        public virtual int uspUpdateUserRankings(Nullable<int> userExpertIDtoUpdate, Nullable<int> seasonToUpdate)
        {
            var userExpertIDtoUpdateParameter = userExpertIDtoUpdate.HasValue ?
                new ObjectParameter("UserExpertIDtoUpdate", userExpertIDtoUpdate) :
                new ObjectParameter("UserExpertIDtoUpdate", typeof(int));
    
            var seasonToUpdateParameter = seasonToUpdate.HasValue ?
                new ObjectParameter("SeasonToUpdate", seasonToUpdate) :
                new ObjectParameter("SeasonToUpdate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateUserRankings", userExpertIDtoUpdateParameter, seasonToUpdateParameter);
        }
    }
}
